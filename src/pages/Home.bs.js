// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as Block from "bs-platform/lib/es6/block.js";
import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";
import * as Belt_List from "bs-platform/lib/es6/belt_List.js";
import * as Belt_Option from "bs-platform/lib/es6/belt_Option.js";
import * as Api$Tripdeer from "../helpers/Api.bs.js";
import * as ReactSelect from "react-select";
import * as Search$Tripdeer from "../components/icons/Search.bs.js";
import * as Prelude$Tripdeer from "../helpers/Prelude.bs.js";
import * as CountryT$Tripdeer from "../types/CountryT.bs.js";
import * as Home_Css$Tripdeer from "./Home_Css.bs.js";
import * as VisaResult$Tripdeer from "../components/VisaResult.bs.js";

var getCountries = Belt_List.toArray(Belt_List.map(CountryT$Tripdeer.countries, (function (country) {
            return {
                    value: country,
                    label: CountryT$Tripdeer.toString(country)
                  };
          })));

function fetchData(country, dispatch) {
  Api$Tripdeer.Fetch.passport(country.label, (function (res) {
          return Curry._1(dispatch, /* CountriesFetched */Block.__(0, [res]));
        }));
  return /* () */0;
}

function getData(countries, to_) {
  return Belt_List.getBy(countries, (function (country) {
                return country.destination === to_;
              }));
}

function onChange(param, dispatch) {
  return Curry._1(dispatch, /* SelectOnChanged */Block.__(1, [/* tuple */[
                  param[0],
                  param[1]
                ]]));
}

function reducer(state, action) {
  if (action.tag) {
    return {
            selection: action[0],
            countries: state.countries
          };
  } else {
    return {
            selection: state.selection,
            countries: action[0]
          };
  }
}

function Home(Props) {
  var match = React.useReducer(reducer, {
        selection: /* tuple */[
          /* NoSelection */0,
          /* NoSelection */0
        ],
        countries: undefined
      });
  var dispatch = match[1];
  var match$1 = match[0];
  var countries = match$1.countries;
  var match$2 = match$1.selection;
  var to_ = match$2[1];
  var from = match$2[0];
  var tmp;
  if (from && to_ && countries !== undefined) {
    var to_$1 = to_[0];
    var match$3 = from[0].label === to_$1.label;
    tmp = React.createElement(React.Fragment, undefined, match$3 ? React.createElement(VisaResult$Tripdeer.make, {
                children: Prelude$Tripdeer.s("You don't need visa to travel in your own country"),
                noResult: true
              }) : null, Belt_Option.mapWithDefault(getData(countries, to_$1.label), null, (function (data) {
                return React.createElement(VisaResult$Tripdeer.make, {
                            children: Prelude$Tripdeer.s(CountryT$Tripdeer.visaToString(CountryT$Tripdeer.visaFromInt(data.code))),
                            to_: to_$1
                          });
              })));
  } else {
    tmp = null;
  }
  return React.createElement("div", {
              className: Home_Css$Tripdeer.container
            }, React.createElement("h1", {
                  className: Home_Css$Tripdeer.heading
                }, Prelude$Tripdeer.s("Check visa requirements per country")), React.createElement("h2", {
                  className: Home_Css$Tripdeer.subHeading
                }, Prelude$Tripdeer.s("Check visa requirements over 199 countries by selecting your country and country that you like to visit.")), React.createElement("form", {
                  className: Home_Css$Tripdeer.form
                }, React.createElement("div", {
                      className: Home_Css$Tripdeer.field
                    }, React.createElement("span", {
                          className: Home_Css$Tripdeer.search
                        }, React.createElement(Search$Tripdeer.make, { })), React.createElement(ReactSelect.default, {
                          className: Home_Css$Tripdeer.select,
                          name: "from",
                          onChange: (function (country) {
                              onChange(/* tuple */[
                                    /* Selected */[country],
                                    to_
                                  ], dispatch);
                              return fetchData(country, dispatch);
                            }),
                          options: getCountries
                        }), React.createElement(ReactSelect.default, {
                          className: Home_Css$Tripdeer.select,
                          name: "to",
                          onChange: (function (country) {
                              return onChange(/* tuple */[
                                          from,
                                          /* Selected */[country]
                                        ], dispatch);
                            }),
                          options: getCountries
                        }))), tmp);
}

var Css = /* alias */0;

var make = Home;

export {
  Css ,
  getCountries ,
  fetchData ,
  getData ,
  onChange ,
  reducer ,
  make ,
  
}
/* getCountries Not a pure module */
