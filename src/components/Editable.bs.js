// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";
import * as Belt_Option from "bs-platform/lib/es6/belt_Option.js";
import * as Prelude$Tripdeer from "../helpers/Prelude.bs.js";
import * as Editable_Css$Tripdeer from "./Editable_Css.bs.js";

function Editable(Props) {
  var text = Props.text;
  var index = Props.index;
  var match = Props.onChange;
  var onChange = match !== undefined ? match : (function (param) {
        return /* () */0;
      });
  var match$1 = Props.onBlur;
  var onBlur = match$1 !== undefined ? match$1 : (function (param) {
        return /* () */0;
      });
  var match$2 = Props.onFocus;
  var onFocus = match$2 !== undefined ? match$2 : (function (param) {
        return /* () */0;
      });
  var tmp;
  var exit = 0;
  if (text !== undefined && text !== "") {
    tmp = null;
  } else {
    exit = 1;
  }
  if (exit === 1) {
    tmp = React.createElement("span", {
          className: Editable_Css$Tripdeer.placeHolder
        }, Prelude$Tripdeer.s("Add your itinerary"));
  }
  return React.createElement("div", {
              className: Editable_Css$Tripdeer.editable
            }, React.createElement("span", {
                  className: Editable_Css$Tripdeer.day
                }, Prelude$Tripdeer.s("Day " + String(index + 1 | 0))), tmp, React.createElement("div", {
                  className: Editable_Css$Tripdeer.editableContent,
                  contentEditable: true,
                  onFocus: onFocus,
                  onBlur: (function (e) {
                      return Curry._1(onBlur, e.target.innerText);
                    }),
                  onInput: (function (e) {
                      return Curry._1(onChange, e.target.innerText);
                    }),
                  suppressContentEditableWarning: true
                }, Prelude$Tripdeer.s(Belt_Option.getWithDefault(text, ""))));
}

var Css = /* alias */0;

var make = Editable;

export {
  Css ,
  make ,
  
}
/* react Not a pure module */
